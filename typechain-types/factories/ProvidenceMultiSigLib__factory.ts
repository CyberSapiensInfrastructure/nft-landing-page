/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProvidenceMultiSigLib,
  ProvidenceMultiSigLibInterface,
} from "../ProvidenceMultiSigLib";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "starttime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "validatorConfirmCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observerConfirmCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "AddSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newValidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "level",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "AddValidator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txIdx",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "level",
        type: "uint8",
      },
    ],
    name: "ConfirmSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txIdx",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "level",
        type: "uint8",
      },
    ],
    name: "ExecuteSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txIdx",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "level",
        type: "uint8",
      },
    ],
    name: "RevokeSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "exiValidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "level",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "UpdValidator",
    type: "event",
  },
  {
    inputs: [],
    name: "providenceSTORAGE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806368fe1ba2146038575b600080fd5b605e7fd0bb5baf4b4290b17be8426da690519c7209fbdba7eb209e15b1f1df65637c8281565b60405190815260200160405180910390f3fea26469706673582212202a54412832d926dec454eb26cfa9c2f02b9843661780fd6bd8c2e2812329fd8764736f6c63430008130033";

type ProvidenceMultiSigLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvidenceMultiSigLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProvidenceMultiSigLib__factory extends ContractFactory {
  constructor(...args: ProvidenceMultiSigLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProvidenceMultiSigLib";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProvidenceMultiSigLib> {
    return super.deploy(overrides || {}) as Promise<ProvidenceMultiSigLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProvidenceMultiSigLib {
    return super.attach(address) as ProvidenceMultiSigLib;
  }
  connect(signer: Signer): ProvidenceMultiSigLib__factory {
    return super.connect(signer) as ProvidenceMultiSigLib__factory;
  }
  static readonly contractName: "ProvidenceMultiSigLib";
  public readonly contractName: "ProvidenceMultiSigLib";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvidenceMultiSigLibInterface {
    return new utils.Interface(_abi) as ProvidenceMultiSigLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProvidenceMultiSigLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProvidenceMultiSigLib;
  }
}
