/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProvidenceMultiSig,
  ProvidenceMultiSigInterface,
} from "../ProvidenceMultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "enum ProvidenceMultiSigLib.validatorLevel[]",
        name: "_levels",
        type: "uint8[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_starttime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expirationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numberOfValidator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numberOfObserver",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "addSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newValidator",
        type: "address",
      },
      {
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "_level",
        type: "uint8",
      },
    ],
    name: "addValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "countSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "countValidator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIdx",
        type: "uint256",
      },
    ],
    name: "executeSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIdx",
        type: "uint256",
      },
    ],
    name: "revokeSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_confirmCount",
        type: "uint256",
      },
    ],
    name: "setObserverCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_confirmCount",
        type: "uint256",
      },
    ],
    name: "setValidatorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "_level",
        type: "uint8",
      },
    ],
    name: "updValidatorRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIdx",
        type: "uint256",
      },
    ],
    name: "viewSignature",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validatorConfirmCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validatorConfirmedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "observerConfirmCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "observerConfirmedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "viewValidator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum ProvidenceMultiSigLib.validatorLevel",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type ProvidenceMultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvidenceMultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProvidenceMultiSig__factory extends ContractFactory {
  constructor(...args: ProvidenceMultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProvidenceMultiSig";
  }

  deploy(
    _validators: string[],
    _levels: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProvidenceMultiSig> {
    return super.deploy(
      _validators,
      _levels,
      overrides || {}
    ) as Promise<ProvidenceMultiSig>;
  }
  getDeployTransaction(
    _validators: string[],
    _levels: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_validators, _levels, overrides || {});
  }
  attach(address: string): ProvidenceMultiSig {
    return super.attach(address) as ProvidenceMultiSig;
  }
  connect(signer: Signer): ProvidenceMultiSig__factory {
    return super.connect(signer) as ProvidenceMultiSig__factory;
  }
  static readonly contractName: "ProvidenceMultiSig";
  public readonly contractName: "ProvidenceMultiSig";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvidenceMultiSigInterface {
    return new utils.Interface(_abi) as ProvidenceMultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProvidenceMultiSig {
    return new Contract(address, _abi, signerOrProvider) as ProvidenceMultiSig;
  }
}
