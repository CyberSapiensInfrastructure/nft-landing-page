/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Launchpad, LaunchpadInterface } from "../Launchpad";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "buyTokenStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061020d8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632775fde31461003b5780632d296bf11461008f575b600080fd5b610074610049366004610167565b6001600160a01b0316600090815260016020908152604080832054918390529091205460ff90911691565b60408051921515835260208301919091520160405180910390f35b6100a261009d366004610197565b6100a4565b005b3360009081526001602052604090205460ff16156101215760405162461bcd60e51b815260206004820152603060248201527f5468652070757263686173652070726f636573732068617320616c726561647960448201526f103132b2b71031b7b6b83632ba32b21760811b606482015260840160405180910390fd5b3360009081526020819052604090205461013c9082906101b0565b3360009081526020818152604080832093909355600190819052919020805460ff1916909117905550565b60006020828403121561017957600080fd5b81356001600160a01b038116811461019057600080fd5b9392505050565b6000602082840312156101a957600080fd5b5035919050565b808201808211156101d157634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220308e0db0829d616f9a9549d7980f7365c3d2945c2ef7129bad798c0ef93dd51f64736f6c634300081a0033";

type LaunchpadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LaunchpadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Launchpad__factory extends ContractFactory {
  constructor(...args: LaunchpadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Launchpad";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Launchpad> {
    return super.deploy(overrides || {}) as Promise<Launchpad>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Launchpad {
    return super.attach(address) as Launchpad;
  }
  connect(signer: Signer): Launchpad__factory {
    return super.connect(signer) as Launchpad__factory;
  }
  static readonly contractName: "Launchpad";
  public readonly contractName: "Launchpad";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LaunchpadInterface {
    return new utils.Interface(_abi) as LaunchpadInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Launchpad {
    return new Contract(address, _abi, signerOrProvider) as Launchpad;
  }
}
